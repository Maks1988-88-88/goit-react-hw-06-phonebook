{"version":3,"sources":["components/App/App.module.css","components/ContactForm/ContactForm.module.css","redux/types/index.js","redux/reducers/contacts.js","redux/reducers/index.js","redux/store/index.js","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","redux/actions/contacts.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ADD_CONTACTS","DELETE_CONTACTS","FILTER_CONTACTS","contacts","id","name","number","contactsStorage","JSON","parse","localStorage","getItem","rootReducer","combineReducers","state","action","type","setItem","stringify","payload","contact","filter","store","createStore","devToolsEnhancer","Section","title","children","ContactForm","useState","setNumber","setName","dispatch","useDispatch","useSelector","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","alert","addContacts","nanoid","pattern","required","onChange","className","s","btn","ContactList","contactsList","toLowerCase","includes","filtersContacts","deleteItem","deleteContacts","list","map","el","posBtn","text","onClick","Filter","console","log","filterContacts","App","wrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b769871.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__16tCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactForm_btn__witQT\"};","export const ADD_CONTACTS = 'ADD_CONTACTS';\r\nexport const DELETE_CONTACTS = 'DELETE_CONTACTS';\r\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\r\n\r\n\r\n","import {\r\n  ADD_CONTACTS,\r\n  DELETE_CONTACTS,\r\n  FILTER_CONTACTS,\r\n} from 'redux/types/index';\r\n\r\nconst contacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contactsStorage = JSON.parse(localStorage.getItem('contacts'));\r\n\r\nexport const contactsReducer = (state = contactsStorage ?? contacts, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACTS:\r\n      localStorage.setItem(\r\n        'contacts',\r\n        JSON.stringify([...state, action.payload]),\r\n      );\r\n      return [...state, action.payload];\r\n    case DELETE_CONTACTS:\r\n      const contact = state.filter(contact => contact.id !== action.payload);\r\n      localStorage.setItem('contacts', JSON.stringify(contact));\r\n      return contact;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filterReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case FILTER_CONTACTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { contactsReducer, filterReducer } from 'redux/reducers/contacts';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { rootReducer } from 'redux/reducers/index';\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\nexport default store;\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContacts } from 'redux/actions/contacts';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport s from 'components/ContactForm/ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts);\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      dispatch(addContacts({ id: nanoid(10), name, number }));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <button className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n","import {\r\n  ADD_CONTACTS,\r\n  DELETE_CONTACTS,\r\n  FILTER_CONTACTS,\r\n} from 'redux/types/index';\r\n\r\nexport const addContacts = (name, number) => ({\r\n  type: ADD_CONTACTS,\r\n  payload: name,\r\n  number,\r\n});\r\n\r\nexport const deleteContacts = id => ({\r\n  type: DELETE_CONTACTS,\r\n  payload: id,\r\n});\r\n\r\nexport const filterContacts = value => ({\r\n  type: FILTER_CONTACTS,\r\n  payload: value,\r\n});\r\n","// import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContacts } from 'redux/actions/contacts';\r\n\r\nimport s from 'components/ContactList/ContactList.module.css';\r\n\r\nconst filtersContacts = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  const contactsList = filtersContacts(contacts, filter);\r\n\r\n  const deleteItem = id => {\r\n    dispatch(deleteContacts(id));\r\n  };\r\n\r\n  return (\r\n    <ol className={s.list}>\r\n      {contactsList.map(el => (\r\n        <li key={el.id}>\r\n          <p className={s.posBtn}>\r\n            <span className={s.text}>\r\n              {el.name}: {el.number}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => deleteItem(el.id)}\r\n              className={s.btn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.array.isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContacts } from 'redux/actions/contacts';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  const changeFilter = e => {\r\n    console.log(e.currentTarget.value);\r\n    let value = e.currentTarget.value;\r\n    dispatch(filterContacts(value));\r\n\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <input type=\"text\" onChange={changeFilter} />\r\n    </label>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n","import s from 'components/App/App.module.css';\n// import React, { useState, useEffect } from 'react';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\n// import { nanoid } from 'nanoid';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function App() {\n\n  return (\n    <div className={s.wrapper}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter/>\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store/index';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Gy29Z\",\"text\":\"ContactList_text__36fsO\",\"btn\":\"ContactList_btn__31pOM\"};"],"sourceRoot":""}